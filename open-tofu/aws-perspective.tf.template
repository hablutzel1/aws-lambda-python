
# The python openmpic layer must be created in the region of the functions.
resource "aws_lambda_layer_version" "python311-open-mpic-layer_{{region}}" {
    filename            = "../layer/layer_content.zip"
    layer_name          = "python311-open-mpic-layer_{{region}}_{{deployment-id}}"
    source_code_hash    = "${filebase64sha256("../layer/layer_content.zip")}"
    compatible_runtimes = ["python3.11"]
    provider = aws.{{region}}
}

resource "aws_lambda_function" "lambda_validator_{{region}}" {
    filename      = "../lambda_validator/lambda_validator.zip"
    function_name = "open_mpic_lambda_validator_{{region}}_{{deployment-id}}"
    role          = aws_iam_role.open_mpic_lambda_role.arn
    handler       = "lambda_function.lambda_handler"
    source_code_hash = filebase64sha256("../lambda_validator/lambda_validator.zip")
    runtime = "python3.11"
    layers = [aws_lambda_layer_version.python311-open-mpic-layer_{{region}}.arn]
    provider = aws.{{region}}
    
}


resource "aws_lambda_function" "lambda_caa_resolver_{{region}}" {
    filename      = "../lambda_caa_resolver/lambda_caa_resolver.zip"
    function_name = "open_mpic_lambda_caa_resolver_{{region}}_{{deployment-id}}"
    role          = aws_iam_role.open_mpic_lambda_role.arn
    handler       = "lambda_function.lambda_handler"
    source_code_hash = filebase64sha256("../lambda_caa_resolver/lambda_caa_resolver.zip")
    runtime = "python3.11"
    layers = [aws_lambda_layer_version.python311-open-mpic-layer_{{region}}.arn]
    provider = aws.{{region}}
    environment {
      variables = {
        default_caa_domains = {{default-caa-domains}}
      }
    }
}